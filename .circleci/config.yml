version: 2
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:18.0.2
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASS
        environment:
          {
            spring.datasource.url=jdbc:mysql://localhost:3306/$DATASOURCE_DB
            spring.datasource.username=$DATASOURCE_DB_USERNAME
            spring.datasource.password=$DATASOURCE_DB_PASSWORD
            spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
            spring.datasource.driver-class-name=com.mysql.jdbc.Driver
            api_openweathermap_key=$API_OPENWEATHERMAP_KEY
            api_openweathermap_url=$API_OPENWEATHERMAP_URL
          }
      - image: cimg/mysql:8.0
        environment:
          MYSQL_USER: $DATASOURCE_DB_USERNAME
          MYSQL_PASSWORD: $DATASOURCE_DB_PASSWORD
          MYSQL_DATABASE: $DATASOURCE_DB
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Waiting for MySQL to be ready
          command: |
            sleep 5

      - run: chmod +x ./gradlew
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      # run tests!
      # - run: ./gradlew test

workflows:
  version: 2
  checkout-build-test:
    jobs:
      - build-and-test:
          context:
            - forecast-database
            - docker
